version: 2.1
jobs:
  run_tests:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install dependencies
          command: |
            pipenv install --deploy --dev
      - save_cache:
          paths:
            - /home/circleci/.local/share/virtualenvs
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}
      - run:
          name: Run tests
          command: |
           pipenv run pytest \
            --junit-xml=test_results/pytest/results.xml \
            --cov-report xml \
            --cov-report term
      - store_test_results:
          path: test_results
      - run:
          name: Upload coverage
          command: bash <(curl -s https://codecov.io/bash) -F flowmachine_unit_tests
          when: always

  lint:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install dependencies
          command: |
            pipenv install --deploy --dev
      - save_cache:
          paths:
            - /home/circleci/.local/share/virtualenvs
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}
      - run:
          name: Lint
          command: pipenv run black --check .

  build_wheel:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Building wheel
          command: python setup.py bdist_wheel
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - dist
      - store_artifacts:
          path: /home/circleci/project/dist
          destination: wheel

  push_wheel:
    docker:
      - image: circleci/python:3.7
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Upload Wheel
          command: |
            pipenv install twine
            pipenv run twine upload /home/circleci/dist/*

workflows:
  run_build_pipeline:
    jobs:
      - run_tests:
          filters:
            tags:
              only: /.*/
      - build_wheel:
          filters:
            tags:
              only: /.*/
      - lint:
          filters:
            tags:
              only: /.*/
      - push_wheel:
          requires:
            - run_tests
            - build_wheel
            - lint
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/